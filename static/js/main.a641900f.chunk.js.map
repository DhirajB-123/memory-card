{"version":3,"sources":["components/game.tsx","components/header.tsx","App.tsx","index.js"],"names":["Game","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","move","e","deck","evaluateMove","shuffleCards","state","images","cards","inherits","createClass","key","value","console","log","randomIndex","currentIndex","length","Math","floor","random","_ref","setState","_this2","gameIMGS","i","react_default","a","createElement","id","toString","onClick","className","score","Component","Header","apply","arguments","highScore","App","newImages","asyncToGenerator","_regeneratorRuntime","mark","_callee","image","responseUrls","wrap","_context","prev","next","fetch","sent","json","message","urls","returnGameJSX","stop","toConsumableArray","placeholderImages","push","src","alt","nativeEvent","path","clicked","dummyArray","every","noneClicked","bind","assertThisInitialized","header_Header","game_Game","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App_0"],"mappings":"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","file":"static/js/main.a641900f.chunk.js","sourcesContent":["import React, {Component} from \"react\";\nimport './game.css'\n\nexport class Game extends Component<{gameIMGS: Array<JSX.Element>, evaluateMove: Function, score: number},\n  {images: Array<JSX.Element>, cards: Array<JSX.Element>}>{\n    constructor(props){\n        super(props)\n        this.state = {\n            images:[],\n            cards: []\n        }\n    }\n\n    shuffleCards(deck: Array<JSX.Element>){\n        console.log(deck)\n        let currentIndex: number = deck.length\n        let randomIndex: number\n        while(currentIndex !== 0 ){\n            randomIndex = Math.floor(Math.random() * currentIndex)\n            currentIndex--\n            [deck[currentIndex], deck[randomIndex]] = \n                [deck[randomIndex], deck[currentIndex]]\n        }\n        this.setState({cards: deck})\n    }\n\n    move: Function = function(e, deck){\n        this.props.evaluateMove(e)\n        this.shuffleCards(deck)\n    }\n\n    render(): React.ReactNode {\n        console.log('counter')\n        let images: Array<JSX.Element> = this.props.gameIMGS\n        let cards: Array<JSX.Element> = []\n        for (let i = 0; i<images.length; i++){\n            cards[i] = \n                <div key={i} id={i.toString()} onClick={(e) => this.move(e, cards)}>\n                    <div className=\"card\">\n                      {images[i]}\n                    </div>\n                </div>\n        }\n        if (!this.state.cards.length || this.props.score % 8 === 0){\n            return(\n                <div id=\"cardsContainer\">\n                     {cards}\n                 </div>\n            )\n        }\n        else{\n            return(\n                <div id=\"cardsContainer\">\n                    {this.state.cards}\n                </div>\n            )\n        }\n    }\n}","import React, {Component} from \"react\";\nimport './header.css'\n\nexport class Header extends Component<{score: number, highScore: number}>{\n    render(): React.ReactNode {\n        let score = this.props.score\n        let highScore = this.props.highScore\n        return(\n            <div id=\"header\">\n                <header>Current Score: {score}</header>\n                <header>High Score: {highScore}</header>\n            </div>\n        )\n    }\n}","import React, { Component} from 'react';\nimport './App.css';\n\n// @ts-ignore\nimport { Game } from './components/game.tsx';\n// @ts-ignore\nimport { Header } from './components/header.tsx';\n\nclass App extends Component <{}, {score: number, urls: Array<string>, gameIMGS: Array<JSX.Element>, clicked: Array<Boolean>, highScore: number}>{\n  state: { score: number; urls: string[]; gameIMGS: never[]; clicked: never[]; highScore: number; };\n  constructor(props: any){\n    super(props)\n    this.state = {\n      score: 0,\n      urls: [],\n      gameIMGS: [],\n      clicked: [],\n      highScore: 0\n    }\n    this.newImages = this.newImages.bind(this)\n    this.evaluateMove = this.evaluateMove.bind(this)\n    this.returnGameJSX = this.returnGameJSX.bind(this)\n    this.noneClicked = this.noneClicked.bind(this)\n  }\n\n  newImages: Function = async function () {\n    const url = 'https://dog.ceo/api/breeds/image/random/8';\n    let image: any = await fetch(url);\n    image = await image.json();\n    let responseUrls: Array<string> = [];\n    for (let i = 0; i < 8; i++) {\n      responseUrls[i] = image.message[i];\n    }\n    this.setState({ urls: responseUrls });\n    this.returnGameJSX();\n  };\n\n  //SET VARIABLES AS THE VALUE RETURNED BY THESE FUNCTIONS\n  //SET STATE ONCE FOR ALL THE CHANGES\n  //APP POTENTIALLY MISBEHAVING IN BUILD DUE TO EXCESS RENDERS\n  componentDidMount(){\n    this.setState({score:0})\n    this.noneClicked()\n    this.newImages()\n    this.returnGameJSX()\n    }\n\n  returnGameJSX: Function = function(){\n    let urls: any = [...this.state.urls]\n    let placeholderImages: Array<JSX.Element> = []\n    for(let i = 0; i<8; i++){\n        placeholderImages.push(<img src={urls[i]} alt='dog' key={i}></img>)\n    }\n    this.setState({gameIMGS: placeholderImages})\n  }\n\n  evaluateMove: Function = function(e: any){\n    let div: any\n    if (e.nativeEvent.path.length === 9){\n      div = e.nativeEvent.path[1]\n    }\n    else {\n      div = e.nativeEvent.path[2]\n    }\n    let id: number = div.id\n    if (this.state.clicked[id] === false){\n      let dummyArray = [...this.state.clicked]\n      dummyArray[id] = true\n      this.setState({score: this.state.score+1, clicked: dummyArray})\n      if (this.state.highScore < this.state.score+1){\n        this.setState({highScore: this.state.score+1})\n      }\n      if (this.state.clicked.every(e => e===true)){\n        this.newImages()\n        this.noneClicked()\n      }\n    }\n    else{\n      this.setState({score: 0})\n      this.noneClicked()\n      this.newImages()\n    }\n  }\n\n  noneClicked: Function = () =>{\n    let dummyArray: Array<boolean> = []\n    for (let i = 0; i < 8; i++){\n      dummyArray[i] = false\n    }\n    this.setState({clicked: dummyArray})\n  }\n\n  render(): React.ReactNode {\n    console.log('counter-app')\n    let score: number = this.state.score\n    let highScore: number = this.state.highScore\n    let gameIMGS: Array<string> = this.state.gameIMGS\n    let evaluateMove: Function = this.evaluateMove\n\n    return (\n      <div>\n        <Header score = {score} highScore = {highScore}/>\n        <Game gameIMGS = {gameIMGS} evaluateMove = {evaluateMove} score = {score}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App.tsx';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}